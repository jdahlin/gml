#!/usr/bin/env python
# -*- mode: python -*-

import optparse
import pprint
import sys

from gml import config

def main(args):
    parser = optparse.OptionParser()
    parser.add_option("-p", "--parse", action="store_true",
                      dest="parse", help="Parse only")
    parser.add_option("-t", "--token", action="store_true",
                      dest="token", help="Tokenize only")
    parser.add_option("-o", "--old", action="store_true",
                      dest="old", help="Use old PyGTK bindings")
    options, args = parser.parse_args(args)

    if options.old:
        config.use_pygtk = True

    from gml.parser import GMLParser
    from gml.builder import GMLBuilder

    filename = args[1]
    if options.token:
        parser = GMLParser()
        parser.tokenize(open(filename))
        pprint.pprint(parser.tokens)
    elif options.parse:
        parser = GMLParser()
        objects = parser.parse(open(filename))
        pprint.pprint([o.json() for o in objects], width=60)
    else:
        builder = GMLBuilder()
        builder.add_from_file(filename)

        for top in builder.objects:
            if hasattr(top, 'show_all'):
                top.show_all()

        builder.main()

if __name__ == '__main__':
    sys.exit(main(sys.argv))
