#!/usr/bin/env python
# -*- mode: python -*-

import optparse
import pprint
import sys

import gtk
import clutter

from gml.parser import GMLParser
from gml.builder import GMLBuilder

def main(args):
    parser = optparse.OptionParser()
    parser.add_option("-p", "--parse", action="store_true",
                      dest="parse", help="Parse only")
    parser.add_option("-t", "--token", action="store_true",
                      dest="token", help="Tokenize only")
    options, args = parser.parse_args(args)

    filename = args[1]
    if options.token:
        parser = GMLParser()
        parser.tokenize(open(filename))
        pprint.pprint(parser.tokens)
    elif options.parse:
        parser = GMLParser()
        objects = parser.parse(open(filename))
        pprint.pprint([o.json() for o in objects], width=60)
    else:
        builder = GMLBuilder()
        builder.signals["gtk_main_quit"] = gtk.main_quit
        builder.signals["clutter_main_quit"] = clutter.main_quit
        builder.add_from_file(filename)

        for top in builder.objects:
            if isinstance(top, gtk.Window):
                top.show_all()
            elif isinstance(top, clutter.Stage):
                top.show_all()

        gtk.main()

if __name__ == '__main__':
    sys.exit(main(sys.argv))
